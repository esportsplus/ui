/**
 *------------------------------------------------------------------------------
 *
 *  Form Fields
 *
 *  Fields Were Originally Placed Within A '.form' Selector BUT Fields Are Not
 *  Always Used Within A Form Tag So Here We Are.
 *
 */

 @use '~@esportsplus/ui/lib';
 @use '~@esportsplus/ui/tokens';
 @use 'check' as check;
 @use 'normalize' as *;
 @use 'text' as text;

 @include normalize();

 .field {
     display: flex;
     position: relative;
     transition:
         background var(--transition-duration) ease-in-out,
         border-color var(--transition-duration) ease-in-out,
         box-shadow var(--transition-duration) ease-in-out,
         color var(--transition-duration) ease-in-out,
         opacity var(--transition-duration) ease-in-out;
     width: var(--width);
     z-index: 1;

     @include tokens.state(hover) {
         z-index: 8;
     }

     @include tokens.state(active) {
         z-index: 9;
     }


     &--optional {
         max-height: var(--max-height);
         opacity: 0;
         pointer-events: none;
         transition:
             background var(--transition-duration) ease-in-out,
             border-color var(--transition-duration) ease-in-out,
             box-shadow var(--transition-duration) ease-in-out,
             color var(--transition-duration) ease-in-out,
             max-height var(--transition-duration) ease-in-out,
             opacity var(--transition-duration) ease-in-out;

         #{tokens.state(active, '.field')} & {
             opacity: 1;
             pointer-events: auto;
         }
     }


     &-description,
     &-error,
     &-title {
         color: var(--color);
         font-size: var(--font-size);
         position: relative;
         width: 100%;
         word-wrap: break-word;

         &:empty {
            height: 0px;
            margin: 0;
         }
     }

     &-mask {
         // Pseudo Element Box Shadow
         &::after {
             @include lib.position(absolute, full);
             border-radius: inherit;
             box-shadow: var(--box-shadow);
             content: '';
             pointer-events: none;
             transition:
                 box-shadow var(--transition-duration) ease-in-out,
                 opacity var(--transition-duration) ease-in-out,
                 transform var(--transition-duration) ease-in-out;
             z-index: 0;
         }

         &--flat {
             &::after {
                 display: none;
             }
         }

         &--outline {
             &::before {
                 @include lib.position(absolute, full);
                 box-shadow: 0 0 0 var(--outline-width) var(--border-color);
                 border-radius: var(--border-radius);
                 content: '';
                 opacity: var(--outline-opacity);
                 pointer-events: none;
                 transition:
                     box-shadow var(--transition-duration) ease-in-out,
                     opacity var(--transition-duration) ease-in-out;
                 z-index: 0;
             }
         }
     }

     &-required {
         background: var(--background);
         border-radius: var(--border-radius);
         height: var(--size);
         width: var(--size);
     }

     &-tag {
         &--hidden {
             @include lib.position(absolute, 0 null null 0);
             appearance: none;
             height: 0px;
             opacity: 0;
             pointer-events: none;
             width: 0px;
             z-index: -1;
         }
     }

     &-title {
         font-weight: var(--font-weight);
         z-index: 1;
     }


     @include check.css();
     @include text.css();
 }
